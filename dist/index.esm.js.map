{"version":3,"file":"index.esm.js","sources":["../src/content.ts","../src/provider/2captcha.ts","../src/index.ts"],"sourcesContent":["import * as types from './types'\n\nexport const ContentScriptDefaultOpts: types.ContentScriptOpts = {\n  visualFeedback: true\n}\n\nexport const ContentScriptDefaultData: types.ContentScriptData = {\n  solutions: []\n}\n\n/**\n * Content script for Recaptcha handling (runs in browser context)\n * @note External modules are not supported here (due to content script isolation)\n */\nexport class RecaptchaContentScript {\n  private opts: types.ContentScriptOpts\n  private data: types.ContentScriptData\n\n  constructor (\n    opts = ContentScriptDefaultOpts,\n    data = ContentScriptDefaultData\n  ) {\n    this.opts = opts\n    this.data = data\n  }\n\n  // Poor mans _.pluck\n  private _pick = (props: any[]) => (o: any) =>\n    props.reduce((a, e) => ({ ...a, [e]: o[e] }), {})\n\n  // Recaptcha client is a nested, circular object with object keys that seem generated\n  // We flatten that object a couple of levels deep for easy access to certain keys we're interested in.\n  private _flattenObject (item: any, levels = 2, ignoreHTML = true) {\n    const isObject = (x: any) => x && typeof x === 'object'\n    const isHTML = (x: any) => x && x instanceof HTMLElement\n    let newObj = {} as any\n    for (let i = 0; i < levels; i++) {\n      item = Object.keys(newObj).length ? newObj : item\n      Object.keys(item).forEach(key => {\n        if (ignoreHTML && isHTML(item[key])) return\n        if (isObject(item[key])) {\n          Object.keys(item[key]).forEach(innerKey => {\n            if (ignoreHTML && isHTML(item[key][innerKey])) return\n            const keyName = isObject(item[key][innerKey])\n              ? `obj_${key}_${innerKey}`\n              : `${innerKey}`\n            newObj[keyName] = item[key][innerKey]\n          })\n        } else {\n          newObj[key] = item[key]\n        }\n      })\n    }\n    return newObj\n  }\n\n  // Helper function to return an object based on a well known value\n  private _getKeyByValue (object: any, value: any) {\n    return Object.keys(object).find(key => object[key] === value)\n  }\n\n  private async _waitUntilDocumentReady () {\n    return new Promise(function (resolve) {\n      if (!document || !window) return resolve()\n      const loadedAlready = /^loaded|^i|^c/.test(document.readyState)\n      if (loadedAlready) return resolve()\n\n      function onReady () {\n        resolve()\n        document.removeEventListener('DOMContentLoaded', onReady)\n        window.removeEventListener('load', onReady)\n      }\n\n      document.addEventListener('DOMContentLoaded', onReady)\n      window.addEventListener('load', onReady)\n    })\n  }\n\n  private _paintCaptchaBusy ($iframe: HTMLIFrameElement) {\n    try {\n      if (this.opts.visualFeedback) {\n        $iframe.style.filter = `opacity(60%) hue-rotate(400deg)` // violet\n      }\n    } catch (error) {\n      // noop\n    }\n    return $iframe\n  }\n\n  private _paintCaptchaSolved ($iframe: HTMLIFrameElement) {\n    try {\n      if (this.opts.visualFeedback) {\n        $iframe.style.filter = `opacity(60%) hue-rotate(230deg)` // green\n      }\n    } catch (error) {\n      // noop\n    }\n    return $iframe\n  }\n\n  private _findVisibleIframeNodes () {\n    return Array.from(\n      document.querySelectorAll<HTMLIFrameElement>(\n        `iframe[src^='https://www.google.com/recaptcha/api2/anchor'][name^=\"a-\"]`\n      )\n    )\n  }\n\n  private _isCaptchaChallengeWindowPresent () {\n    return Array.from(document.querySelectorAll<HTMLIFrameElement>(\n        `iframe[src^='https://www.google.com/recaptcha/api2/bframe'][name^=\"c-\"]`\n      )).filter(x=>window.getComputedStyle(x).visibility !== 'hidden').length>0;\n  }\n\n  private _findVisibleIframeNodeById (id?: string) {\n    return document.querySelector<HTMLIFrameElement>(\n      `iframe[src^='https://www.google.com/recaptcha/api2/anchor'][name^=\"a-${id ||\n        ''}\"]`\n    )\n  }\n\n  private _hideChallengeWindowIfPresent(id?: string){\n    let frame : HTMLElement|null = document.querySelector<HTMLIFrameElement>(\n      `iframe[src^='https://www.google.com/recaptcha/api2/bframe'][name^=\"c-${id || ''}\"]`\n    );\n    if(!frame){\n      return;\n    }\n    while(frame && frame.parentElement && frame.parentElement !== document.body){\n      frame = frame.parentElement;\n    }\n    if(frame){\n      frame.style.visibility='hidden';\n    }\n  }\n\n  private getClients () {\n    // Bail out early if there's no indication of recaptchas\n    if (!window || !window.__google_recaptcha_client) return\n    if (!window.___grecaptcha_cfg || !window.___grecaptcha_cfg.clients) {\n      return\n    }\n    if (!Object.keys(window.___grecaptcha_cfg.clients).length) return\n    return window.___grecaptcha_cfg.clients\n  }\n\n  private getVisibleIframesIds () {\n    // Find all visible recaptcha boxes through their iframes or showed challenges\n    let includeInvisible = this._isCaptchaChallengeWindowPresent();\n\n    return this._findVisibleIframeNodes()\n      // do not exclude invisible recaptchas as it could be solved at the same manner\n      .filter($f => includeInvisible || !$f.src.includes('invisible'))\n      .map($f => this._paintCaptchaBusy($f))\n      .filter($f => $f && $f.getAttribute('name'))\n      .map($f => $f.getAttribute('name') || '') // a-841543e13666\n      .map(\n        rawId => rawId.split('-').slice(-1)[0] // a-841543e13666 => 841543e13666\n      )\n      .filter(id => id)\n  }\n\n  private getResponseInputById (id?: string) {\n    if (!id) return\n    const $iframe = this._findVisibleIframeNodeById(id)\n    if (!$iframe) return\n    const $parentForm = $iframe.closest(`form`)\n    if ($parentForm) {\n      return $parentForm.querySelector(`[name='g-recaptcha-response']`)\n    }\n  }\n\n  private getClientById (id?: string) {\n    if (!id) return\n    const clients = this.getClients()\n    // Lookup captcha \"client\" info using extracted id\n    let client: any = Object.values(clients || {})\n      .filter(obj => this._getKeyByValue(obj, id))\n      .shift() // returns first entry in array or undefined\n    if (!client) return\n    client = this._flattenObject(client) as any\n    client.widgetId = client.id\n    client.id = id\n    return client\n  }\n\n  private extractInfoFromClient (client?: any) {\n    if (!client) return\n    const info: types.CaptchaInfo = this._pick(['sitekey', 'callback'])(client)\n    if (!info.sitekey) return\n    info.id = client.id\n    info.widgetId = client.widgetId\n    info.display = this._pick([\n      'size',\n      'top',\n      'left',\n      'width',\n      'height',\n      'theme'\n    ])(client)\n    // callbacks can be strings or funtion refs\n    if (info.callback && typeof info.callback === 'function') {\n      info.callback = info.callback.name || 'anonymous'\n    }\n    if (document && document.location) info.url = document.location.href\n    return info\n  }\n\n  public async findRecaptchas () {\n    const result = {\n      captchas: [] as (types.CaptchaInfo | undefined)[],\n      error: null as any\n    }\n    try {\n      await this._waitUntilDocumentReady()\n      const clients = this.getClients()\n      if (!clients) return result\n      result.captchas = this.getVisibleIframesIds()\n        .map(id => this.getClientById(id))\n        .map(client => this.extractInfoFromClient(client))\n        .map(info => {\n          if (!info) return\n          const $input = this.getResponseInputById(info.id)\n          info.hasResponseElement = !!$input\n          info.responseElementContent = $input?$input.innerHTML:undefined;\n          return info\n        })\n        .filter(info => info)\n    } catch (error) {\n      result.error = error\n      return result\n    }\n    return result\n  }\n\n  public async enterRecaptchaSolutions () {\n    const result = {\n      solved: [] as (types.CaptchaSolved | undefined)[],\n      error: null as any\n    }\n    try {\n      await this._waitUntilDocumentReady()\n      const clients = this.getClients()\n      if (!clients) {\n        result.error = 'No recaptchas found'\n        return result\n      }\n      const solutions = this.data.solutions\n      if (!solutions || !solutions.length) {\n        result.error = 'No solutions provided'\n        return result\n      }\n\n      result.solved = this.getVisibleIframesIds()\n        .map(id => this.getClientById(id))\n        .map(client => {\n          const solved: types.CaptchaSolved = {\n            id: client.id,\n            responseElement: false,\n            responseCallback: false\n          }\n          const $iframe = this._findVisibleIframeNodeById(solved.id)\n          if (!$iframe) {\n            solved.error = `Iframe not found for id '${solved.id}'`\n            return solved\n          }\n          const solution = solutions.find(s => s.id === solved.id)\n          if (!solution || !solution.text) {\n            solved.error = `Solution not found for id '${solved.id}'`\n            return solved\n          }\n          // Hide if present challenge window\n          this._hideChallengeWindowIfPresent(solved.id);\n\n          // Enter solution in response textarea\n          const $input = this.getResponseInputById(solved.id)\n          if ($input) {\n            $input.innerHTML = solution.text\n            solved.responseElement = true\n          }\n          // Enter solution in optional callback\n          if (client.callback) {\n            try {\n              if (typeof client.callback === 'function') {\n                client.callback.call(window, solution.text)\n              } else {\n                eval(client.callback).call(window, solution.text) // tslint:disable-line\n              }\n              solved.responseCallback = true\n            } catch (error) {\n              solved.error = error\n            }\n          }\n          // Finishing up\n          solved.isSolved = solved.responseCallback || solved.responseElement\n          solved.solvedAt = new Date()\n          this._paintCaptchaSolved($iframe)\n          return solved\n        })\n    } catch (error) {\n      result.error = error\n      return result\n    }\n    return result\n  }\n}\n\n/*\n// Example data\n\n{\n    \"captchas\": [{\n        \"sitekey\": \"6LdAUwoUAAAAAH44X453L0tUWOvx11XXXXXXXX\",\n        \"id\": \"lnfy52r0cccc\",\n        \"widgetId\": 0,\n        \"display\": {\n            \"size\": null,\n            \"top\": 23,\n            \"left\": 13,\n            \"width\": 28,\n            \"height\": 28,\n            \"theme\": null\n        },\n        \"url\": \"https://example.com\",\n        \"hasResponseElement\": true\n    }],\n    \"error\": null\n}\n\n{\n    \"solutions\": [{\n        \"id\": \"lnfy52r0cccc\",\n        \"provider\": \"2captcha\",\n        \"providerCaptchaId\": \"61109548000\",\n        \"text\": \"03AF6jDqVSOVODT-wLKZ47U0UXz...\",\n        \"requestAt\": \"2019-02-09T18:30:43.587Z\",\n        \"responseAt\": \"2019-02-09T18:30:57.937Z\"\n    }]\n    \"error\": null\n}\n\n{\n    \"solved\": [{\n        \"id\": \"lnfy52r0cccc\",\n        \"responseElement\": true,\n        \"responseCallback\": false,\n        \"isSolved\": true,\n        \"solvedAt\": {}\n    }]\n    \"error\": null\n}\n*/\n","export const PROVIDER_ID = '2captcha'\nimport * as types from '../types'\n\nimport Debug from 'debug'\nconst debug = Debug(`puppeteer-extra-plugin:recaptcha:${PROVIDER_ID}`)\n\nconst solver = require('2captcha-api')\n\nconst secondsBetweenDates = (before: Date, after: Date) =>\n  (after.getTime() - before.getTime()) / 1000\n\nexport interface DecodeRecaptchaAsyncResult {\n  err?: any\n  result?: any\n  invalid?: any\n}\n\nasync function decodeRecaptchaAsync (\n  token: string,\n  sitekey: string,\n  url: string,\n  opts = { pollingInterval: 2000 }\n): Promise<DecodeRecaptchaAsyncResult> {\n  return new Promise(resolve => {\n    const cb = (err: any, result: any, invalid: any) => resolve({ err, result, invalid })\n    try {\n      solver.setApiKey(token)\n      solver.decodeReCaptcha(sitekey, url, opts, cb)\n    } catch (error) {\n      return resolve({ err: error })\n    }\n  })\n}\n\nexport async function getSolutions (\n  captchas: types.CaptchaInfo[] = [],\n  token?: string\n): Promise<types.GetSolutionsResult> {\n  const solutions = await Promise.all(captchas.map(c => getSolution(c, token || '')))\n  return { solutions, error: solutions.find(s => !!s.error) }\n}\n\nasync function getSolution (\n  captcha: types.CaptchaInfo,\n  token: string\n): Promise<types.CaptchaSolution> {\n  const solution: types.CaptchaSolution = {\n    provider: PROVIDER_ID\n  }\n  try {\n    if (!captcha || !captcha.sitekey || !captcha.url || !captcha.id) {\n      throw new Error('Missing data in captcha')\n    }\n    solution.id = captcha.id\n    solution.requestAt = new Date()\n    debug('Requesting solution..', solution)\n    const { err, result, invalid } = await decodeRecaptchaAsync(\n      token,\n      captcha.sitekey,\n      captcha.url\n    )\n    debug('Got response', { err, result, invalid })\n    if (err) throw new Error(`${PROVIDER_ID} error: ${err}`)\n    if (!result || !result.text || !result.id) {\n      throw new Error(`${PROVIDER_ID} error: Missing response data: ${result}`)\n    }\n    solution.providerCaptchaId = result.id\n    solution.text = result.text\n    solution.responseAt = new Date()\n    solution.hasSolution = !!solution.text\n    solution.duration = secondsBetweenDates(solution.requestAt, solution.responseAt)\n  } catch (error) {\n    debug('Error', error)\n    solution.error = error.toString()\n  }\n  return solution\n}\n","import { PuppeteerExtraPlugin } from 'puppeteer-extra-plugin'\n\nimport * as types from './types'\n\nimport { RecaptchaContentScript } from './content'\nimport * as TwoCaptcha from './provider/2captcha'\n\nexport const BuiltinSolutionProviders: types.SolutionProvider[] = [\n  {\n    id: TwoCaptcha.PROVIDER_ID,\n    fn: TwoCaptcha.getSolutions\n  }\n]\n\n/**\n * A puppeteer-extra plugin to automatically detect and solve reCAPTCHAs.\n * @noInheritDoc\n */\nexport class PuppeteerExtraPluginRecaptcha extends PuppeteerExtraPlugin {\n  constructor (opts: Partial<types.PluginOptions>) {\n    super(opts)\n    this.debug('Initialized', this.opts)\n  }\n\n  get name () {\n    return 'recaptcha'\n  }\n\n  get defaults (): types.PluginOptions {\n    return {\n      visualFeedback: true,\n      throwOnError: false\n    }\n  }\n\n  get contentScriptOpts (): types.ContentScriptOpts {\n    const { visualFeedback } = this.opts\n    return {\n      visualFeedback\n    }\n  }\n\n  private _generateContentScript (\n    fn: 'findRecaptchas' | 'enterRecaptchaSolutions',\n    data?: any\n  ) {\n    this.debug('_generateContentScript', fn, data)\n    return `(async() => {\n      const DATA = ${JSON.stringify(data || null)}\n      const OPTS = ${JSON.stringify(this.contentScriptOpts)}\n\n      ${RecaptchaContentScript.toString()}\n      const script = new RecaptchaContentScript(OPTS, DATA)\n      return script.${fn}()\n    })()`\n  }\n\n  async findRecaptchas (page: types.Page) {\n    this.debug('findRecaptchas')\n    // As this might be called very early while recaptcha is still loading\n    // we add some extra waiting logic for developer convenience.\n    const hasRecaptchaScriptTag = await page.$(\n      `script[src=\"https://www.google.com/recaptcha/api.js\"]`\n    )\n    this.debug('hasRecaptchaScriptTag', !!hasRecaptchaScriptTag)\n    if (hasRecaptchaScriptTag) {\n      this.debug('waitForRecaptchaClient - start', new Date())\n      await page.waitForFunction(\n        `\n        (function() {\n          let result = window.___grecaptcha_cfg && window.___grecaptcha_cfg.count\n          if(typeof result === \"number\"){\n              return true;\n          }\n          return result;\n        })()\n      `,\n        { polling: 200, timeout: 10 * 1000 }\n      )\n      this.debug('waitForRecaptchaClient - end', new Date()) // used as timer\n    }\n    // Even without a recaptcha script tag we're trying, just in case.\n    const response: types.FindRecaptchasResult = await page.evaluate(\n      this._generateContentScript('findRecaptchas')\n    )\n    this.debug('findRecaptchas', response)\n    if (this.opts.throwOnError && response.error) {\n      throw new Error(response.error)\n    }\n    return response\n  }\n\n  async getRecaptchaSolutions (\n    captchas: types.CaptchaInfo[],\n    provider?: types.SolutionProvider\n  ) {\n    this.debug('getRecaptchaSolutions')\n    provider = provider || this.opts.provider\n    if (!provider || (!provider.token && !provider.fn)) {\n      throw new Error('Please provide a solution provider to the plugin.')\n    }\n    let fn = provider.fn\n    if (!fn) {\n      const builtinProvider = BuiltinSolutionProviders.find(\n        p => p.id === (provider || {}).id\n      )\n      if (!builtinProvider || !builtinProvider.fn) {\n        throw new Error(\n          `Cannot find builtin provider with id '${provider.id}'.`\n        )\n      }\n      fn = builtinProvider.fn\n    }\n    const response = await fn.call(this, captchas, provider.token)\n    response.error =\n      response.error ||\n      response.solutions.find((s: types.CaptchaSolution) => !!s.error)\n    this.debug('getRecaptchaSolutions', response)\n    if (this.opts.throwOnError && response.error) {\n      throw new Error(response.error)\n    }\n    return response\n  }\n\n  async enterRecaptchaSolutions (\n    page: types.Page,\n    solutions: types.CaptchaSolution[]\n  ) {\n    this.debug('enterRecaptchaSolutions')\n    const response: types.EnterRecaptchaSolutionsResult = await page.evaluate(\n      this._generateContentScript('enterRecaptchaSolutions', { solutions })\n    )\n    response.error = response.error || response.solved.find(s => !!s.error)\n    this.debug('enterRecaptchaSolutions', response)\n    if (this.opts.throwOnError && response.error) {\n      throw new Error(response.error)\n    }\n    return response\n  }\n\n  async solveRecaptchas (\n    page: types.Page\n  ): Promise<types.SolveRecaptchasResult> {\n    this.debug('solveRecaptchas')\n    const response: types.SolveRecaptchasResult = {\n      captchas: [],\n      solutions: [],\n      solved: [],\n      error: null\n    }\n    try {\n      // If `this.opts.throwOnError` is set any of the\n      // following will throw and abort execution.\n      const { captchas, error: captchasError } = await this.findRecaptchas(page)\n      response.captchas = captchas\n\n      if (captchas.length) {\n        const {\n          solutions,\n          error: solutionsError\n        } = await this.getRecaptchaSolutions(response.captchas)\n        response.solutions = solutions\n\n        const {\n          solved,\n          error: solvedError\n        } = await this.enterRecaptchaSolutions(page, response.solutions)\n        response.solved = solved\n\n        response.error = captchasError || solutionsError || solvedError\n      }\n    } catch (error) {\n      response.error = error.toString()\n    }\n    this.debug('solveRecaptchas', response)\n    if (this.opts.throwOnError && response.error) {\n      throw new Error(response.error)\n    }\n    return response\n  }\n\n  async onPageCreated (page: types.Page) {\n    this.debug('onPageCreated')\n\n    // Add custom page methods\n    page.findRecaptchas = async () => this.findRecaptchas(page)\n    page.getRecaptchaSolutions = async (\n      captchas: types.CaptchaInfo[],\n      provider?: types.SolutionProvider\n    ) => this.getRecaptchaSolutions(captchas, provider)\n    page.enterRecaptchaSolutions = async (solutions: types.CaptchaSolution[]) =>\n      this.enterRecaptchaSolutions(page, solutions)\n\n    // Add convenience methods that wraps all others\n    page.solveRecaptchas = async () => this.solveRecaptchas(page)\n  }\n}\n\nexport default (options?: Partial<types.PluginOptions>) => {\n  return new PuppeteerExtraPluginRecaptcha(options || {})\n}\n"],"names":["TwoCaptcha.PROVIDER_ID","TwoCaptcha.getSolutions"],"mappings":"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"}